pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'drishti979/spefinal' // Ensure this is correct
        ANSIBLE_PLAYBOOK = 'deploy_to_minikube.yml'
        INVENTORY_FILE = 'inventory' // Path to your inventory file
        DOCKER_TAG = 'latest' // You can change this to another tag if needed
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/gpdrishti/mlprojects.git'
            }
        }

        stage('Setup Ansible Environment') {
            steps {
                script {
                    // Ensure Ansible is installed and available in the Jenkins environment
                    sh 'ansible --version'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile in the repository
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to the repository
                    sh "docker push ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    // Pull the Docker image using Docker commands
                    sh "docker pull ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    // Ensure Minikube is running
                    sh 'minikube status || minikube start'

                    // Run the Ansible playbook
                    sh "ansible-playbook -i ${INVENTORY_FILE} ${ANSIBLE_PLAYBOOK}"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    // Verify the deployment in Minikube
                    sh 'kubectl get pods,services -o wide'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
